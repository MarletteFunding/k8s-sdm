---
apiVersion: v1
kind: Namespace
metadata:
  name: k8-automation
  labels:
    owner: atomist
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8-automation-serviceaccount
  namespace: k8-automation
  labels:
    owner: atomist
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: k8-automation-clusterrole
  labels:
    owner: atomist
rules:
  - apiGroups: [""]
    resources: ["namespaces", "services"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["extensions", "apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["extensions"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: k8-automation-clusterrole-binding
  labels:
    owner: atomist
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8-automation-clusterrole
subjects:
  - kind: ServiceAccount
    name: k8-automation-serviceaccount
    namespace: k8-automation
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: k8-automation
  namespace: k8-automation
  labels:
    app: k8-automation
    owner: atomist
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: k8-automation
      owner: atomist
  template:
    metadata:
      labels:
        app: k8-automation
        owner: atomist
        version: "0"
    spec:
      serviceAccountName: k8-automation-serviceaccount
      containers:
      - name: k8-automation
        image: atomist/k8-automation:0.8.0-20180529021029
        imagePullPolicy: IfNotPresent
        env:
        - name: ATOMIST_CONFIG
          valueFrom:
            secretKeyRef:
              name: automation
              key: config
        ports:
        - name: http
          containerPort: 2866
          protocol: TCP
        livenessProbe:
          httpGet:
            path: "/health"
            port: http
            scheme: HTTP
          initialDelaySeconds: 20
          timeoutSeconds: 3
          periodSeconds: 20
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: "/health"
            port: http
            scheme: HTTP
          initialDelaySeconds: 20
          timeoutSeconds: 3
          periodSeconds: 20
          successThreshold: 1
          failureThreshold: 3
        resources:
          limits:
            cpu: 500m
            memory: 384Mi
          requests:
            cpu: 100m
            memory: 256Mi
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
