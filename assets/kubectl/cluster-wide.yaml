apiVersion: v1
kind: Namespace
metadata:
  name: k8-sdm
  labels:
    owner: atomist
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8-sdm-serviceaccount
  namespace: k8-sdm
  labels:
    owner: atomist
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: k8-sdm-clusterrole
  labels:
    owner: atomist
rules:
  - apiGroups: [""]
    resources: ["namespaces", "services"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["extensions", "apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["extensions"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: k8-sdm-clusterrole-binding
  labels:
    owner: atomist
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8-sdm-clusterrole
subjects:
  - kind: ServiceAccount
    name: k8-sdm-serviceaccount
    namespace: k8-sdm
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: k8-sdm
  namespace: k8-sdm
  labels:
    app: k8-sdm
    owner: atomist
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: k8-sdm
      owner: atomist
  template:
    metadata:
      labels:
        app: k8-sdm
        owner: atomist
        version: "0"
    spec:
      serviceAccountName: k8-sdm-serviceaccount
      containers:
        - name: k8-sdm
          image: atomist/k8-sdm:0.10.0
          imagePullPolicy: IfNotPresent
          env:
            - name: NODE_ENV
              value: production
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ATOMIST_CONFIG
              valueFrom:
                secretKeyRef:
                  name: automation
                  key: config
          ports:
            - name: http
              containerPort: 2866
              protocol: TCP
          livenessProbe:
            httpGet:
              path: "/health"
              port: http
              scheme: HTTP
            initialDelaySeconds: 20
            timeoutSeconds: 3
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: "/health"
              port: http
              scheme: HTTP
            initialDelaySeconds: 20
            timeoutSeconds: 3
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: 500m
              memory: 384Mi
            requests:
              cpu: 100m
              memory: 256Mi
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
